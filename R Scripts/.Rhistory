num.columns <- c('T-1_Recognition', 'T-2_Recognition', 'T-3_Recognition', 'T-4_Recognition', 'UT-1_Recognition', 'UT-2_Recognition', 'UT-3_Recognition', 'UT-4_Recognition')
num.columns <- c('T-1c_Likert', 'T-2c_Likert', 'T-3c_Likert', 'T-4c_Likert', 'Correct_Mvt_T-1', 'Correct_Mvt_T-2', 'Correct_Mvt_T-3', 'Correct_Mvt_T-4')
df[num.columns] <- sapply(df[num.columns], as.numeric)
df2$Finished <- as.factor(df2$Finished)
df2$Statistical_Organization <- as.factor(df2$Statistical_Organization)
df2$Condition <- as.factor(df2$Condition)
#MC: histogram of total experience scores.
ggplot(df2, aes(x = `Experience_Total`, na.rm = TRUE)) +
geom_histogram(color = "black", fill = "white", stat = "bin", binwidth = 5)
#MC: regression for comprehension as predicted by experience.
model_experience_comprehension <- lm(df2$Correct_Trigram_Scores ~ df2$Experience_Total)
summary(model_experience_comprehension)
#MC: scatterplot for comprehension and experience
experience_comprehension <- ggplot(df2, aes(df2$Experience_Total, df$Correct_Trigram_Scores))
experience_comprehension + stat_summary(geom = "point")
#MC: scatterplot for comprehension and experience
experience_comprehension <- ggplot(df2, aes(`Experience_Total`, df$Correct_Trigram_Scores))
experience_comprehension + stat_summary(geom = "point")
#MC: scatterplot for comprehension and experience
experience_comprehension <- ggplot(df2, aes(`Experience_Total`, df2$Correct_Trigram_Scores))
experience_comprehension + stat_summary(geom = "point")
experience_comprehension + stat_summary(geom = "point", geom = "line")
experience_comprehension + stat_summary(geom = "point") + stat_summary(geom = "line")
experience_comprehension + stat_summary(geom = "point") + stat_summary(geom = "smooth")
experience_comprehension + stat_summary(geom = "point") + stat_summary(function = mean, geom = "smooth")
experience_comprehension + stat_summary(geom = "point") + stat_summary(fun.mean, geom = "smooth")
experience_comprehension + stat_summary(geom = "point") + stat_summary(fun.y = mean, geom = "smooth")
experience_comprehension + stat_summary(geom = "point") + geom_smooth()
experience_comprehension + stat_summary(geom = "point") + geom_line()
experience_comprehension + stat_summary(geom = "point") + geom_smooth(method = lm)
experience_comprehension + stat_summary(geom = "point") + geom_smooth(method = rlm)
#MC: regression for production as predicted by experience.
model_experience_production <- lm(df2$Correct_Mvt_Scores ~ df2$Experience_Total)
summary(model_experience_production)
#MC: scatterplot for production and experience
experience_production <- ggplot(df2, aes(`Experience_Total`, `Correct_Mvt_Scores`))
experience_production + stat_summary(geom = "point") + geom_smooth(method = lm)
# ANOVA test for whether confidence predicts correctness on production.
# THIS IS A BETTER TEST BECAUSE CORRECTNESS IS DOING ALL THE PREDICTIVE WORK (AS EVIDENCED BY THE TEST BELOW)
model_productionL <- aov(df$Mvt_Likert ~ df$Correct_Mvt_Scores)
summary(model_productionL)
# ANOVA test for whether confidence predicts correctness on comprehension.
model_comprehensionL <- aov(df$Total_Likert ~ df$Correct_Trigram_Scores)
summary(model_comprehensionL)
#### POST HOC ANALYSES ####
# Post hoc analysis for comprehension scores (RENAME THIS MODEL):
model_comprehension_ph.emm.s <- emmeans(model_comprehension2, "Condition")
pairs(model_comprehensions_ph.emm.s)
# Pairwise analysis for production scores by condition:
model_production_ph <- emmeans(model_production2, "Condition")
pairs(model_production_ph)
# Pairwise analysis for production scores by condition:
model_production_ph <- emmeans(model_production, "Condition")
pairs(model_production_ph)
# Pairwise analysis for production scores by condition:
model_production_ph <- emmeans(model_production2, "Condition")
pairs(model_production_ph)
model_comprehension_ph$contrasts
#### POST HOC ANALYSES ####
# Pairwise analysis for comprehension scores by condition:
model_comprehension_ph <- emmeans(model_comprehension2, "Condition")
pairs(model_comprehensions_ph)
model_comprehension_ph$contrasts
# Pairwise analysis for production scores by condition:
model_production_ph <- emmeans(model_production2, "Condition", type = "response")
pairs(model_production_ph)
model_comprehension_ph %>% confint()
#### POST HOC ANALYSES ####
# Pairwise analysis for comprehension scores by condition:
model_comprehension_ph <- emmeans(model_comprehension2, "Condition")
pairs(model_comprehensions_ph)
model_comprehension_ph %>% confint()
model_comprehension_ph %>% summary(infer = TRUE)
model_comprehension_ph %>% summary()
# Pairwise analysis for production scores by condition:
model_production_ph <- emmeans(model_production2, "Condition")
pairs(model_production_ph)
#### GRAPHING ####
confidence_production <- ggplot(df2, aes(`Mvt_Likert`, `Correct_Mvt_Scores`))
confidence_production + stat_summary(geom = "point") + geom_smooth(method = lm)
summary(model_productionL)
#### GRAPHING ####
model_experience_production <- lm(df2$Correct_Mvt_Scores ~ df2$Mvt_Likert)
summary(model_experience_production)
confidence_comprehension <- ggplot(df2, aes(`Total_Likert`, `Correct_Mvt_Scores`))
confidence_comprehension + stat_summary(geom = "point") + geom_smooth(method = lm)
confidence_production + stat_summary(geom = "point") + geom_smooth(method = lm)
#### GRAPHING ####
confidence_production <- ggplot(df, aes(`Mvt_Likert`, `Correct_Mvt_Scores`))
confidence_production + stat_summary(geom = "point") + geom_smooth(method = lm)
confidence_comprehension <- ggplot(df, aes(`Total_Likert`, `Correct_Mvt_Scores`))
confidence_comprehension + stat_summary(geom = "point") + geom_smooth(method = lm)
summary(model_productionL)
# ANOVA test for whether confidence predicts correctness on comprehension.
model_comprehensionL <- aov(df$Total_Likert ~ df$Correct_Trigram_Scores)
summary(model_comprehensionL)
# ANOVA test for the interaction between Statistical_Organization and action condition on comprehension.
model_comprehension <- aov(df$Correct_Trigram_Scores ~ df$Statistical_Organization * df$Condition)
summary(model_comprehension)
#### IMPORTING & LABELLING DATA ####
# Import the file directly from Github:
myfile <- "~/Documents/Most/SLA_Study/GitHub/ActionLearning/Data/SLA_Official/Concatenated/SLA_Data_All.csv"
# Check how all of your variables are labeled:
str(df)
# Check how all of your variables are labeled:
str(df)
# Check how all of your variables are labeled:
str(df)
# ANOVA test for the interaction between Statistical_Organization and action condition on performance.
model_production <- aov(df$Correct_Mvt_Scores ~ df$Statistical_Organization * df$Condition)
summary(model_production)
# ANOVA test for the interaction between Statistical_Organization and action condition on performance.
model_production <- aov(df$Correct_Mvt_Scores ~ df$Condition * df$Statistical_Organization)
summary(model_production)
# ANOVA test for whether confidence predicts correctness on production.
# THIS IS A BETTER TEST BECAUSE CORRECTNESS IS DOING ALL THE PREDICTIVE WORK (AS EVIDENCED BY THE TEST BELOW)
model_productionL <- lm(df$Mvt_Likert ~ df$Correct_Mvt_Scores)
summary(model_productionL)
# ANOVA test for whether confidence predicts correctness on comprehension.
model_comprehensionL <- lm(df$Total_Likert ~ df$Correct_Trigram_Scores)
summary(model_comprehensionL)
model_comprehensionC <- aov(df$Correct_Trigram_Scores ~ df$Condition)
summary(model_comprehensionC)
?ggtitle
# Actual code for bar graph with action conditions (x) and production scores (y):
# Used to have..., fill = df$Statistical_Organization
barProduction <- ggplot(df, aes(Condition, Correct_Mvt_Scores, fill = Statistical_Organization))
barProduction + stat_summary(fun = mean, geom = "bar", position = "dodge") +
labs(x = "Action Conditions", y = "Production Score") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2)
# Actual code for bar graph with action conditions (x) and production scores (y):
# Used to have...fill = Statistical_Organization
barProduction <- ggplot(df, aes(Condition, Correct_Mvt_Scores))
# Actual code for bar graph with action conditions (x) and production scores (y):
# Used to have...fill = Statistical_Organization; fill = df$Statistical_Organization
barProduction <- ggplot(df, aes(Condition, Correct_Mvt_Scores))
barProduction + stat_summary(fun = mean, geom = "bar", position = "dodge") +
labs(x = "Action Conditions", y = "Production Score") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2)
# Actual code for bar graph with action conditions (x) and production scores (y):
# Used to have...fill = Statistical_Organization; fill = df$Statistical_Organization
barProduction <- ggplot(df, aes(Statistical_Organization, Correct_Mvt_Scores))
# Actual code for bar graph with action conditions (x) and production scores (y):
barProduction <- ggplot(df, aes(Statistical_Organization, Correct_Mvt_Scores))
barProduction + stat_summary(fun = mean, geom = "bar", position = "dodge") +
labs(x = "Statistical Organization", y = "Production Score") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2)
barProduction + stat_summary(fun = mean, geom = "bar", position = "dodge") +
labs(x = "Statistical Organization", y = "Production Score", subtitle = "GAH") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2)
barProduction + stat_summary(fun = mean, geom = "bar", position = "dodge") +
labs(x = "Statistical Organization", y = "Production Score", title = "GAH") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2)
barProduction + stat_summary(fun = mean, geom = "bar", position = "dodge") +
labs(x = "Statistical Organization", y = "Production Score", title = "Production Score by Statistical Organization") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2)
?legend
barProduction + stat_summary(fun = mean, geom = "bar", position = "dodge") +
labs(x = "Statistical Organization", y = "Production Score", title = "Production Score by Statistical Organization") +
legend(0 = "Random", 1 = "Statistical Learning") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2)
barProduction + stat_summary(fun = mean, geom = "bar", position = "dodge") +
labs(x = "Statistical Organization", y = "Production Score", title = "Production Score by Statistical Organization") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2)
?axis
axis(x, labels = "Random", "Statistical Organization")
barProduction + stat_summary(fun = mean, geom = "bar", position = "dodge") +
labs(x = "Statistical Organization", y = "Production Score", title = "Production Score by Statistical Organization") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) +
axis(x, labels = "Random", "Statistical Organization")
plot.new
barProduction + stat_summary(fun = mean, geom = "bar", position = "dodge") +
labs(x = "Statistical Organization", y = "Production Score", title = "Production Score by Statistical Organization") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) +
axis(x, labels = "Random", "Statistical Organization")
legend(x, title = "Statistical Organization", c("Random", "Statistical Learning"))
help(legend)
legend(title = "Statistical Organization", c("Random", "Statistical Learning"))
legend(x, y, title = "Statistical Organization", c("Random", "Statistical Learning"))
legend(x, y = NULL, title = "Statistical Organization", c("Random", "Statistical Learning"))
legend(x, y = NULL, legend, title = "Statistical Organization", c("Random", "Statistical Learning"))
legend(x, y = NULL, legend, title = "Statistical Organization", pch = c("Random", "Statistical Learning"))
leg.txt <- c("Random", "Statistical Learning")
legend(6, 1, leg.txt, pch = "Statistical Organization")
legend(6, 1, legend, leg.txt, pch = "Statistical Organization")
legend(6, 1, legend, leg.txt, pch = "SLPO")
legend(6, 1, legend, leg.txt)
barProduction + legend(6, 1, legend, leg.txt)
barProduction + stat_summary(fun = mean, geom = "bar", position = "dodge") +
labs(x = "Statistical Organization", y = "Production Score", title = "Production Score by Statistical Organization") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) +
theme(axis.text.x = element_blank())
barProduction + stat_summary(fun = mean, geom = "bar", position = "dodge") +
labs(x = "Statistical Organization", y = "Production Score", title = "Production Score by Statistical Organization") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) +
scale_x_discrete(breaks=c("0.5","1","2"), labels=c("Random", "Statistical Learning"))
barProduction + stat_summary(fun = mean, geom = "bar", position = "dodge") +
labs(x = "Statistical Organization", y = "Production Score", title = "Production Score by Statistical Organization") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) +
scale_x_discrete(breaks=c("1","2"), labels=c("Random", "Statistical Learning"))
barProduction + stat_summary(fun = mean, geom = "bar", position = "dodge") +
labs(x = "Statistical Organization", y = "Production Score", title = "Production Score by Statistical Organization") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) +
scale_x_discrete(breaks=c("0","1"), labels=c("Random", "Statistical Learning"))
barProduction + stat_summary(fun = mean, geom = "bar", position = "dodge", color = white) +
labs(x = "Statistical Organization", y = "Production Score", title = "Production Score by Statistical Organization") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) +
scale_x_discrete(breaks=c("0","1"), labels=c("Random", "Statistical Learning"))
barProduction + stat_summary(fun = mean, geom = "bar", position = "dodge", color = "white") +
labs(x = "Statistical Organization", y = "Production Score", title = "Production Score by Statistical Organization") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) +
scale_x_discrete(breaks=c("0","1"), labels=c("Random", "Statistical Learning"))
barProduction + stat_summary(fun = mean, geom = "bar", position = "dodge") +
labs(x = "Statistical Organization", y = "Production Score", title = "Production Score by Statistical Organization") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2, color = "white") +
scale_x_discrete(breaks=c("0","1"), labels=c("Random", "Statistical Learning"))
barProduction + stat_summary(fun = mean, geom = "bar", color = white, position = "dodge") +
labs(x = "Statistical Organization", y = "Production Score", title = "Production Score by Statistical Organization") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) +
scale_x_discrete(breaks=c("0","1"), labels=c("Random", "Statistical Learning"))
barProduction + stat_summary(fun = mean, geom = "bar", position = "dodge") +
labs(x = "Statistical Organization", y = "Production Score", title = "Production Score by Statistical Organization") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) +
scale_x_discrete(breaks=c("0","1"), labels=c("Random", "Statistical Learning"))
?ggplot
# Actual code for bar graph with action conditions (x) and production scores (y):
barProduction <- ggplot(df, aes(Statistical_Organization, Correct_Mvt_Scores), color = "white")
barProduction + stat_summary(fun = mean, geom = "bar", position = "dodge") +
labs(x = "Statistical Organization", y = "Production Score", title = "Production Score by Statistical Organization") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) +
scale_x_discrete(breaks=c("0","1"), labels=c("Random", "Statistical Learning"))
# Actual code for bar graph with action conditions (x) and production scores (y):
barProduction <- ggplot(df, aes(Statistical_Organization, Correct_Mvt_Scores), color = 'white')
barProduction + stat_summary(fun = mean, geom = "bar", position = "dodge") +
labs(x = "Statistical Organization", y = "Production Score", title = "Production Score by Statistical Organization") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) +
scale_x_discrete(breaks=c("0","1"), labels=c("Random", "Statistical Learning"))
# Actual code for bar graph with action conditions (x) and production scores (y):
barProduction <- ggplot(df, aes(Statistical_Organization, Correct_Mvt_Scores), colour = 'white')
barProduction + stat_summary(fun = mean, geom = "bar", position = "dodge") +
labs(x = "Statistical Organization", y = "Production Score", title = "Production Score by Statistical Organization") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) +
scale_x_discrete(breaks=c("0","1"), labels=c("Random", "Statistical Learning"))
# Actual code for bar graph with action conditions (x) and production scores (y):
barProduction <- ggplot(df, aes(Statistical_Organization, Correct_Mvt_Scores), fill = 'white')
barProduction + stat_summary(fun = mean, geom = "bar", position = "dodge") +
labs(x = "Statistical Organization", y = "Production Score", title = "Production Score by Statistical Organization") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) +
scale_x_discrete(breaks=c("0","1"), labels=c("Random", "Statistical Learning"))
# Actual code for bar graph with action conditions (x) and production scores (y):
barProduction <- ggplot(df, aes(Statistical_Organization, Correct_Mvt_Scores), color = white)
barProduction + stat_summary(fun = mean, geom = "bar", position = "dodge") +
labs(x = "Statistical Organization", y = "Production Score", title = "Production Score by Statistical Organization") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) +
scale_x_discrete(breaks=c("0","1"), labels=c("Random", "Statistical Learning"))
# Actual code for bar graph with action conditions (x) and production scores (y):
barProduction <- ggplot(df, aes(Statistical_Organization, Correct_Mvt_Scores), fill = white)
barProduction + stat_summary(fun = mean, geom = "bar", position = "dodge") +
labs(x = "Statistical Organization", y = "Production Score", title = "Production Score by Statistical Organization") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) +
scale_x_discrete(breaks=c("0","1"), labels=c("Random", "Statistical Learning"))
# Actual code for bar graph with action conditions (x) and production scores (y):
barProduction <- ggplot(df, aes(Statistical_Organization, Correct_Mvt_Scores), color = "black", fill = "white")
barProduction + stat_summary(fun = mean, geom = "bar", position = "dodge") +
labs(x = "Statistical Organization", y = "Production Score", title = "Production Score by Statistical Organization") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) +
scale_x_discrete(breaks=c("0","1"), labels=c("Random", "Statistical Learning"))
# Actual code for bar graph with action conditions (x) and production scores (y):
barProduction <- ggplot(df, aes(Statistical_Organization, Correct_Mvt_Scores, color = "black", fill = "white"))
barProduction + stat_summary(fun = mean, geom = "bar", position = "dodge") +
labs(x = "Statistical Organization", y = "Production Score", title = "Production Score by Statistical Organization") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) +
scale_x_discrete(breaks=c("0","1"), labels=c("Random", "Statistical Learning"))
# Actual code for bar graph with action conditions (x) and production scores (y):
barProduction <- ggplot(df, aes(Statistical_Organization, Correct_Mvt_Scores, color = black, fill = white))
barProduction + stat_summary(fun = mean, geom = "bar", position = "dodge") +
labs(x = "Statistical Organization", y = "Production Score", title = "Production Score by Statistical Organization") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) +
scale_x_discrete(breaks=c("0","1"), labels=c("Random", "Statistical Learning"))
# Actual code for bar graph with action conditions (x) and production scores (y):
barProduction <- ggplot(df, aes(Statistical_Organization, Correct_Mvt_Scores), color = black, fill = white)
barProduction + stat_summary(fun = mean, geom = "bar", position = "dodge") +
labs(x = "Statistical Organization", y = "Production Score", title = "Production Score by Statistical Organization") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) +
scale_x_discrete(breaks=c("0","1"), labels=c("Random", "Statistical Learning"))
barProduction + stat_summary(fun = mean, geom = "bar", position = "dodge") +
geom_bar(color = 'black', fill = 'white') +
labs(x = "Statistical Organization", y = "Production Score", title = "Production Score by Statistical Organization") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) +
scale_x_discrete(breaks=c("0","1"), labels=c("Random", "Statistical Learning"))
barProduction + geom_bar(color = 'black', fill = 'white') +
stat_summary(fun = mean, geom = "bar", position = "dodge") +
labs(x = "Statistical Organization", y = "Production Score", title = "Production Score by Statistical Organization") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) +
scale_x_discrete(breaks=c("0","1"), labels=c("Random", "Statistical Learning"))
# Actual code for bar graph with action conditions (x) and production scores (y):
barProduction <- ggplot(df, aes(x = Statistical_Organization, y = Correct_Mvt_Scores, color = 'black', fill = 'white'))
barProduction + stat_summary(fun = mean, geom = "bar", position = "dodge") +
labs(x = "Statistical Organization", y = "Production Score", title = "Production Score by Statistical Organization") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) +
scale_x_discrete(breaks=c("0","1"), labels=c("Random", "Statistical Learning"))
# Actual code for bar graph with action conditions (x) and production scores (y):
barProduction <- ggplot(df, aes(x = Statistical_Organization, y = Correct_Mvt_Scores, color = 'black', fill = 'white'))
barProduction + stat_summary(fun = mean, geom = "bar", position = "dodge") +
labs(x = "Statistical Organization", y = "Production Score", title = "Production Score by Statistical Organization") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) +
scale_x_discrete(breaks=c("0","1"), labels=c("Random", "Statistical Learning"))
# Actual code for bar graph with action conditions (x) and production scores (y):
barProduction <- ggplot(df, aes(x = Statistical_Organization, y = Correct_Mvt_Scores, color = 'white'))
barProduction + stat_summary(fun = mean, geom = "bar", position = "dodge") +
labs(x = "Statistical Organization", y = "Production Score", title = "Production Score by Statistical Organization") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) +
scale_x_discrete(breaks=c("0","1"), labels=c("Random", "Statistical Learning"))
# Actual code for bar graph with action conditions (x) and production scores (y):
barProduction <- ggplot(df, aes(x = Statistical_Organization, y = Correct_Mvt_Scores, color = 'black'))
# Actual code for bar graph with action conditions (x) and production scores (y):
barProduction <- ggplot(df, aes(x = Statistical_Organization, y = Correct_Mvt_Scores, color = 'black'))
barProduction + stat_summary(fun = mean, geom = "bar", position = "dodge") +
labs(x = "Statistical Organization", y = "Production Score", title = "Production Score by Statistical Organization") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) +
scale_x_discrete(breaks=c("0","1"), labels=c("Random", "Statistical Learning"))
# Actual code for bar graph with action conditions (x) and production scores (y):
barProduction <- ggplot(df, aes(x = Statistical_Organization, y = Correct_Mvt_Scores))
barProduction + stat_summary(fun = mean, geom = "bar", position = "dodge") +
labs(x = "Statistical Organization", y = "Production Score", title = "Production Score by Statistical Organization") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) +
scale_x_discrete(breaks=c("0","1"), labels=c("Random", "Statistical Learning"))
# Actual code for bar graph with action conditions (x) and production scores (y):
barProduction <- ggplot(df, aes(x = Statistical_Organization, y = Correct_Mvt_Scores, fill = 'white'))
barProduction + stat_summary(fun = mean, geom = "bar", position = "dodge") +
labs(x = "Statistical Organization", y = "Production Score", title = "Production Score by Statistical Organization") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) +
scale_x_discrete(breaks=c("0","1"), labels=c("Random", "Statistical Learning"))
barProduction + stat_summary(fun = mean, geom = "bar", position = "dodge") +
geom_bar(fill = 'white') +
labs(x = "Statistical Organization", y = "Production Score", title = "Production Score by Statistical Organization") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) +
scale_x_discrete(breaks=c("0","1"), labels=c("Random", "Statistical Learning"))
barProduction + stat_summary(fun = mean, geom = "bar", position = "dodge") +
geom_bar(fill = 'white', color = 'black') +
labs(x = "Statistical Organization", y = "Production Score", title = "Production Score by Statistical Organization") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) +
scale_x_discrete(breaks=c("0","1"), labels=c("Random", "Statistical Learning"))
# Actual code for bar graph with action conditions (x) and production scores (y):
barProduction <- ggplot(df, aes(x = Statistical_Organization, y = Correct_Mvt_Scores)) +  geom_bar(fill = 'white', color = 'black')
barProduction + stat_summary(fun = mean, geom = "bar", position = "dodge") +
labs(x = "Statistical Organization", y = "Production Score", title = "Production Score by Statistical Organization") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) +
scale_x_discrete(breaks=c("0","1"), labels=c("Random", "Statistical Learning"))
rlang::last_error()
barProduction + stat_summary(fun = mean, geom = "bar", position = "dodge", color = 'white') +
labs(x = "Statistical Organization", y = "Production Score", title = "Production Score by Statistical Organization") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) +
scale_x_discrete(breaks=c("0","1"), labels=c("Random", "Statistical Learning"))
barProduction + stat_summary(fun = mean, geom = "bar", color = 'white') +
labs(x = "Statistical Organization", y = "Production Score", title = "Production Score by Statistical Organization") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) +
scale_x_discrete(breaks=c("0","1"), labels=c("Random", "Statistical Learning"))
barProduction + stat_summary(fun = mean) +
geom_bar(position = "dodge", color = 'white')
?stat_count
barProduction + stat_summary(fun = mean) +
geom_bar(color = 'white') +
labs(x = "Statistical Organization", y = "Production Score", title = "Production Score by Statistical Organization") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) +
scale_x_discrete(breaks=c("0","1"), labels=c("Random", "Statistical Learning"))
barProduction + stat_summary(fun = mean, geom = "bar", position = "dodge") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) +
labs(x = "Statistical Organization", y = "Production Score", title = "Production Score by Statistical Organization") +
scale_x_discrete(breaks=c("0","1"), labels=c("Random", "Statistical Learning"))
# Actual code for bar graph with action conditions (x) and production scores (y):
barProduction <- ggplot(df, aes(x = Statistical_Organization, y = Correct_Mvt_Scores))
barProduction + stat_summary(fun = mean, geom = "bar", position = "dodge") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) +
labs(x = "Statistical Organization", y = "Production Score", title = "Production Score by Statistical Organization") +
scale_x_discrete(breaks=c("0","1"), labels=c("Random", "Statistical Learning"))
# Here's the same bar graph with action conditions (x) and comprehension scores (y):
barProduction <- ggplot(df, aes(x = Statistical_Organization, y = Correct_Trigram_Scores))
barComprehension + stat_summary(fun = mean, geom = "bar", position = "dodge") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) +
labs(x = "Statistical Organization", y = "Comprehension Score", title = "Comprehension Score by Statistical Organization") +
scale_x_discrete(breaks=c("0","1"), labels=c("Random", "Statistical Learning"))
# Here's the same bar graph with action conditions (x) and comprehension scores (y):
barComprehension <- ggplot(df, aes(x = Statistical_Organization, y = Correct_Trigram_Scores))
barComprehension + stat_summary(fun = mean, geom = "bar", position = "dodge") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) +
labs(x = "Statistical Organization", y = "Comprehension Score", title = "Comprehension Score by Statistical Organization") +
scale_x_discrete(breaks=c("0","1"), labels=c("Random", "Statistical Learning"))
barProduction + stat_summary(fun = mean, geom = "bar", position = "dodge") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) +
labs(x = "Statistical Organization", y = "Production Score", title = "Production Score by Statistical Organization") +
scale_x_discrete(breaks=c("0","1"), labels=c("Random", "Statistical Learning"))
mean(df$Correct_Trigram_Scores)
df
View(df)
mean(df$Familiar_Scores)
mean(df$Unfamiliar_Scores)
mean(df$Correct_Mvt_Scores)
summary(df$Familiar_Scores)
stat.desc(df$Familiar_Scores)
stat.desc(df$Correct_Mvt_Scores)
stat.desc(df$Correct_Trigram_Scores)
ggplot(data=df, aes(x = Statistical_Organization, y = Correct_Mvt_Scores)) +
geom_bar(stat="identity", color="blue", fill="white")
ggggplot(data=df, aes(x = Statistical_Organization, y = Correct_Mvt_Scores)) +
geom_bar(stat="identity", color="blue", fill="white")
ggplot(data=df, aes(x = Statistical_Organization, y = Correct_Mvt_Scores)) +
geom_bar(stat="identity", fill="white")
ggplot(data=df, aes(x = Statistical_Organization, y = Correct_Mvt_Scores)) +
geom_bar(stat="identity", fill="white")
ggplot(data=df, aes(x = Statistical_Organization, y = Correct_Mvt_Scores)) +
geom_bar(color="blue", fill="white")
ggplot(data = df, aes(x = Statistical_Organization, y = Correct_Mvt_Scores)) +
geom_bar(stat = identity)#, color="blue", fill="white"
ggplot(data = df, aes(x = Statistical_Organization, y = Correct_Mvt_Scores)) +
geom_bar(stat = "identity")#, color="blue", fill="white"
barProduction + stat_summary(fun = mean, geom = "bar", position = "dodge", fill = "white") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) +
labs(x = "Statistical Organization", y = "Production Score", title = "Production Score by Statistical Organization") +
scale_x_discrete(breaks=c("0","1"), labels=c("Random", "Statistical Learning"))
barProduction + stat_summary(fun = mean, geom = "bar", position = "dodge", fill = "white") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) +
labs(x = "Statistical Organization", y = "Production Score", title = "Production Score by Statistical Organization") +
scale_x_discrete(breaks=c("0","1"), labels=c("Random", "Statistical Learning")) +
theme_classic(
base_size = 11,
base_family = "",
base_line_size = base_size/22,
base_rect_size = base_size/22
)
barProduction + stat_summary(fun = mean, geom = "bar", position = "dodge", fill = "white") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) +
labs(x = "Statistical Organization", y = "Production Score", title = "Production Score by Statistical Organization") +
scale_x_discrete(breaks=c("0","1"), labels=c("Random", "Statistical Learning")) +
theme_classic()
barProduction + stat_summary(fun = mean, geom = "bar", position = "dodge", fill = "grey") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) +
labs(x = "Statistical Organization", y = "Production Score", title = "Production Score by Statistical Organization") +
scale_x_discrete(breaks=c("0","1"), labels=c("Random", "Statistical Learning")) +
theme_classic()
barProduction + stat_summary(fun = mean, geom = "bar", position = "dodge", fill = "grey") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) +
labs(x = "Statistical Organization", y = "Production Score", title = "Production Score by Statistical Organization") +
scale_x_discrete(breaks=c("0","1"), labels=c("Random", "Statistical Learning")) +
theme_light()
barProduction + stat_summary(fun = mean, geom = "bar", position = "dodge", fill = "grey") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) +
labs(x = "Statistical Organization", y = "Production Score", title = "Production Score by Statistical Organization") +
scale_x_discrete(breaks=c("0","1"), labels=c("Random", "Statistical Learning")) +
theme_dark()
barProduction + stat_summary(fun = mean, geom = "bar", position = "dodge", fill = "grey") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) +
labs(x = "Statistical Organization", y = "Production Score", title = "Production Score by Statistical Organization") +
scale_x_discrete(breaks=c("0","1"), labels=c("Random", "Statistical Learning")) +
theme_classic()
barProduction + stat_summary(fun = mean, geom = "bar", position = "dodge", fill = "grey") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) +
labs(x = "Statistical Organization", y = "Production Score", title = "Production Score by Statistical Organization") +
scale_x_discrete(breaks=c("0","1"), labels=c("Random", "Statistical Learning")) +
theme_classic() +
geom_signif(comparisons = list(c("Random", "Statistical Learning")), map_signif_level=TRUE)
library(ggsignif)
install.packages("ggsignif")
library(ggsignif)
library(ggsignif)
install.packages("ggsignif")
install.packages("ggsignif")
library(ggsignif)
# Here's the same bar graph with action conditions (x) and comprehension scores (y):
barComprehension <- ggplot(df, aes(x = Statistical_Organization, y = Correct_Trigram_Scores))
library(ggplot)
library(ggplot2)
barProduction + stat_summary(fun = mean, geom = "bar", position = "dodge", fill = "grey") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) +
labs(x = "Statistical Organization", y = "Production Score", title = "Production Score by Statistical Organization") +
scale_x_discrete(breaks=c("0","1"), labels=c("Random", "Statistical Learning")) +
theme_classic() +
geom_signif(comparisons = list(c("Random", "Statistical Learning")), map_signif_level=TRUE)
library(readr)   #reading CSV's
library(kableExtra)   #formatting table
library(pastecs) #describes data
library(dplyr)   #manipulating data to view it
library(ggplot2) #visualizing data with graphs (we don't talk about the first "ggplot")
library(emmeans) #post hoc analyses (contrasts!)
library(magrittr) #not sure if I need this one?
barProduction + stat_summary(fun = mean, geom = "bar", position = "dodge", fill = "grey") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) +
labs(x = "Statistical Organization", y = "Production Score", title = "Production Score by Statistical Organization") +
scale_x_discrete(breaks=c("0","1"), labels=c("Random", "Statistical Learning")) +
theme_classic() +
geom_signif(comparisons = list(c("Random", "Statistical Learning")), map_signif_level=TRUE)
?stat_summary
??stat_summary
library(ggplot2)
barProduction + stat_summary(fun = mean, geom = "bar", position = "dodge", fill = "grey") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) +
labs(x = "Statistical Organization", y = "Production Score", title = "Production Score by Statistical Organization") +
scale_x_discrete(breaks=c("0","1"), labels=c("Random", "Statistical Learning")) +
theme_classic() +
geom_signif(comparisons = list(c("Random", "Statistical Learning")), map_signif_level=TRUE)
library(ggplot2)
install.packages("ggplot2")
install.packages("ggsignif")
install.packages("ggsignif")
library(ggplot2)
remove.packages("ggplot2")
install.packages("ggplot2")
library(ggplot2)
remove.packages("ggplot2")
remove.packages("ggsignif")
install.packages("ggplot2")
library(ggplot2)
