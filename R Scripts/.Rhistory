ggplot(data=df, aes(x = Statistical_Organization, y = Correct_Mvt_Scores)) +
geom_bar(stat="identity", color="blue", fill="white")
ggggplot(data=df, aes(x = Statistical_Organization, y = Correct_Mvt_Scores)) +
geom_bar(stat="identity", color="blue", fill="white")
ggplot(data=df, aes(x = Statistical_Organization, y = Correct_Mvt_Scores)) +
geom_bar(stat="identity", fill="white")
ggplot(data=df, aes(x = Statistical_Organization, y = Correct_Mvt_Scores)) +
geom_bar(stat="identity", fill="white")
ggplot(data=df, aes(x = Statistical_Organization, y = Correct_Mvt_Scores)) +
geom_bar(color="blue", fill="white")
ggplot(data = df, aes(x = Statistical_Organization, y = Correct_Mvt_Scores)) +
geom_bar(stat = identity)#, color="blue", fill="white"
ggplot(data = df, aes(x = Statistical_Organization, y = Correct_Mvt_Scores)) +
geom_bar(stat = "identity")#, color="blue", fill="white"
barProduction + stat_summary(fun = mean, geom = "bar", position = "dodge", fill = "white") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) +
labs(x = "Statistical Organization", y = "Production Score", title = "Production Score by Statistical Organization") +
scale_x_discrete(breaks=c("0","1"), labels=c("Random", "Statistical Learning"))
barProduction + stat_summary(fun = mean, geom = "bar", position = "dodge", fill = "white") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) +
labs(x = "Statistical Organization", y = "Production Score", title = "Production Score by Statistical Organization") +
scale_x_discrete(breaks=c("0","1"), labels=c("Random", "Statistical Learning")) +
theme_classic(
base_size = 11,
base_family = "",
base_line_size = base_size/22,
base_rect_size = base_size/22
)
barProduction + stat_summary(fun = mean, geom = "bar", position = "dodge", fill = "white") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) +
labs(x = "Statistical Organization", y = "Production Score", title = "Production Score by Statistical Organization") +
scale_x_discrete(breaks=c("0","1"), labels=c("Random", "Statistical Learning")) +
theme_classic()
barProduction + stat_summary(fun = mean, geom = "bar", position = "dodge", fill = "grey") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) +
labs(x = "Statistical Organization", y = "Production Score", title = "Production Score by Statistical Organization") +
scale_x_discrete(breaks=c("0","1"), labels=c("Random", "Statistical Learning")) +
theme_classic()
barProduction + stat_summary(fun = mean, geom = "bar", position = "dodge", fill = "grey") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) +
labs(x = "Statistical Organization", y = "Production Score", title = "Production Score by Statistical Organization") +
scale_x_discrete(breaks=c("0","1"), labels=c("Random", "Statistical Learning")) +
theme_light()
barProduction + stat_summary(fun = mean, geom = "bar", position = "dodge", fill = "grey") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) +
labs(x = "Statistical Organization", y = "Production Score", title = "Production Score by Statistical Organization") +
scale_x_discrete(breaks=c("0","1"), labels=c("Random", "Statistical Learning")) +
theme_dark()
barProduction + stat_summary(fun = mean, geom = "bar", position = "dodge", fill = "grey") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) +
labs(x = "Statistical Organization", y = "Production Score", title = "Production Score by Statistical Organization") +
scale_x_discrete(breaks=c("0","1"), labels=c("Random", "Statistical Learning")) +
theme_classic()
barProduction + stat_summary(fun = mean, geom = "bar", position = "dodge", fill = "grey") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) +
labs(x = "Statistical Organization", y = "Production Score", title = "Production Score by Statistical Organization") +
scale_x_discrete(breaks=c("0","1"), labels=c("Random", "Statistical Learning")) +
theme_classic() +
geom_signif(comparisons = list(c("Random", "Statistical Learning")), map_signif_level=TRUE)
library(ggsignif)
install.packages("ggsignif")
library(ggsignif)
library(ggsignif)
install.packages("ggsignif")
install.packages("ggsignif")
library(ggsignif)
# Here's the same bar graph with action conditions (x) and comprehension scores (y):
barComprehension <- ggplot(df, aes(x = Statistical_Organization, y = Correct_Trigram_Scores))
library(ggplot)
library(ggplot2)
barProduction + stat_summary(fun = mean, geom = "bar", position = "dodge", fill = "grey") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) +
labs(x = "Statistical Organization", y = "Production Score", title = "Production Score by Statistical Organization") +
scale_x_discrete(breaks=c("0","1"), labels=c("Random", "Statistical Learning")) +
theme_classic() +
geom_signif(comparisons = list(c("Random", "Statistical Learning")), map_signif_level=TRUE)
library(readr)   #reading CSV's
library(kableExtra)   #formatting table
library(pastecs) #describes data
library(dplyr)   #manipulating data to view it
library(ggplot2) #visualizing data with graphs (we don't talk about the first "ggplot")
library(emmeans) #post hoc analyses (contrasts!)
library(magrittr) #not sure if I need this one?
barProduction + stat_summary(fun = mean, geom = "bar", position = "dodge", fill = "grey") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) +
labs(x = "Statistical Organization", y = "Production Score", title = "Production Score by Statistical Organization") +
scale_x_discrete(breaks=c("0","1"), labels=c("Random", "Statistical Learning")) +
theme_classic() +
geom_signif(comparisons = list(c("Random", "Statistical Learning")), map_signif_level=TRUE)
?stat_summary
??stat_summary
library(ggplot2)
barProduction + stat_summary(fun = mean, geom = "bar", position = "dodge", fill = "grey") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) +
labs(x = "Statistical Organization", y = "Production Score", title = "Production Score by Statistical Organization") +
scale_x_discrete(breaks=c("0","1"), labels=c("Random", "Statistical Learning")) +
theme_classic() +
geom_signif(comparisons = list(c("Random", "Statistical Learning")), map_signif_level=TRUE)
library(ggplot2)
install.packages("ggplot2")
install.packages("ggsignif")
install.packages("ggsignif")
library(ggplot2)
remove.packages("ggplot2")
install.packages("ggplot2")
library(ggplot2)
remove.packages("ggplot2")
remove.packages("ggsignif")
install.packages("ggplot2")
library(ggplot2)
remove.packages("ggplot2")
remove.packages("ggsignif")
install.packages("ggplot2")
install.packages("ggplot2")
library(ggplot2)
install.packages("ggsignif")
library(ggsignif)
#### LOADING PACKAGES ####
library(readr)   #reading CSV's
library(kableExtra)   #formatting table
library(pastecs) #describes data
library(dplyr)   #manipulating data to view it
library(emmeans) #post hoc analyses (contrasts!)
library(magrittr) #not sure if I need this one?
barProduction + stat_summary(fun = mean, geom = "bar", position = "dodge", fill = "grey") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) +
labs(x = "Statistical Organization", y = "Production Score", title = "Production Score by Statistical Organization") +
scale_x_discrete(breaks=c("0","1"), labels=c("Random", "Statistical Learning")) +
theme_classic() +
geom_signif(comparisons = list(c("Random", "Statistical Learning")), map_signif_level=TRUE)
# Actual code for bar graph with action conditions (x) and production scores (y):
barProduction <- ggplot(df, aes(x = Statistical_Organization, y = Correct_Mvt_Scores))
barProduction + stat_summary(fun = mean, geom = "bar", position = "dodge", fill = "grey") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) +
labs(x = "Statistical Organization", y = "Production Score", title = "Production Score by Statistical Organization") +
scale_x_discrete(breaks=c("0","1"), labels=c("Random", "Statistical Learning")) +
theme_classic() +
geom_signif(comparisons = list(c("Random", "Statistical Learning")), map_signif_level=TRUE)
?geom_signif
barProduction + stat_summary(fun = mean, geom = "bar", position = "dodge", fill = "grey") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) +
labs(x = "Statistical Organization", y = "Production Score", title = "Production Score by Statistical Organization") +
scale_x_discrete(breaks=c("0","1"), labels=c("Random", "Statistical Learning")) +
theme_classic() +
geom_signif(comparisons = list(c("Random", "Statistical Learning")))
barProduction + stat_summary(fun = mean, geom = "bar", position = "dodge", fill = "grey") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) +
labs(x = "Statistical Organization", y = "Production Score", title = "Production Score by Statistical Organization") +
scale_x_discrete(breaks=c("0","1"), labels=c("Random", "Statistical Learning")) +
theme_classic() +
geom_signif(comparisons = list(c("Random", "Statistical Learning")), map_signif_level = function(p) sprintf("p = %.2g", p))
barProduction + stat_summary(fun = mean, geom = "bar", position = "dodge", fill = "grey") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) +
labs(x = "Statistical Organization", y = "Production Score", title = "Production Score by Statistical Organization") +
scale_x_discrete(breaks=c("0","1"), labels=c("Random", "Statistical Learning")) +
theme_classic() +
geom_signif(comparisons = list(c("Random", "Statistical Learning")), test = "t.test", color="black"))
barProduction + stat_summary(fun = mean, geom = "bar", position = "dodge", fill = "grey") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) +
labs(x = "Statistical Organization", y = "Production Score", title = "Production Score by Statistical Organization") +
scale_x_discrete(breaks=c("0","1"), labels=c("Random", "Statistical Learning")) +
theme_classic() +
geom_signif(comparisons = list(c("Random", "Statistical Learning")), test = "t.test", color="black")
?stat_signif
barProduction + stat_summary(fun = mean, geom = "bar", position = "dodge", fill = "grey") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) +
labs(x = "Statistical Organization", y = "Production Score", title = "Production Score by Statistical Organization") +
scale_x_discrete(breaks=c("0","1"), labels=c("Random", "Statistical Learning")) +
theme_classic() +
stat_signif(comparisons = list(c("Random", "Statistical Learning")), test = "t.test", color="black")
barProduction + stat_summary(fun = mean, geom = "bar", position = "dodge", fill = "grey") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) +
labs(x = "Statistical Organization", y = "Production Score", title = "Production Score by Statistical Organization") +
scale_x_discrete(breaks=c("0","1"), labels=c("Random", "Statistical Learning")) +
stat_signif(comparisons = list(c("Random", "Statistical Learning")), test = "t.test", color="black") +
theme_classic()
barProduction + stat_summary(fun = mean, geom = "bar", position = "dodge", fill = "grey") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) +
labs(x = "Statistical Organization", y = "Production Score", title = "Production Score by Statistical Organization") +
scale_x_discrete(breaks=c("0","1"), labels=c("Random", "Statistical Learning")) +
stat_compare_means(aes(group=Statistical_Organization), method = "t.test",) +
#  geom_signif(comparisons = list(c("Random", "Statistical Learning")), test = "t.test", color="black") +
theme_classic()
install.packages("ggpubr")
library(ggpubr)
barProduction + stat_summary(fun = mean, geom = "bar", position = "dodge", fill = "grey") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) +
labs(x = "Statistical Organization", y = "Production Score", title = "Production Score by Statistical Organization") +
scale_x_discrete(breaks=c("0","1"), labels=c("Random", "Statistical Learning")) +
stat_compare_means(aes(group=Statistical_Organization), method = "t.test") +
#  geom_signif(comparisons = list(c("Random", "Statistical Learning")), test = "t.test", color="black") +
theme_classic()
barProduction + stat_summary(fun = mean, geom = "bar", position = "dodge", fill = "grey") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) +
labs(x = "Statistical Organization", y = "Production Score", title = "Production Score by Statistical Organization") +
scale_x_discrete(breaks=c("0","1"), labels=c("Random", "Statistical Learning")) +
stat_compare_means(aes(group=Statistical_Organization), method = "t.test", color = "black") +
#  geom_signif(comparisons = list(c("Random", "Statistical Learning")), test = "t.test", color="black") +
theme_classic()
barProduction + stat_summary(fun = mean, geom = "bar", position = "dodge", fill = "grey") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) +
labs(x = "Statistical Organization", y = "Production Score", title = "Production Score by Statistical Organization") +
scale_x_discrete(breaks=c("0","1"), labels=c("Random", "Statistical Learning")) +
stat_compare_means(aes(group=Statistical_Organization), method = "t.test", map_signif_level = TRUE) +
#  geom_signif(comparisons = list(c("Random", "Statistical Learning")), test = "t.test", color="black") +
theme_classic()
barProduction + stat_summary(fun = mean, geom = "bar", position = "dodge", fill = "grey") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) +
labs(x = "Statistical Organization", y = "Production Score", title = "Production Score by Statistical Organization") +
scale_x_discrete(breaks=c("0","1"), labels=c("Random", "Statistical Learning")) +
stat_compare_means(aes(group=Statistical_Organization), method = "t.test", map_signif_level = c("***"=0.001, "**"=0.01, "*"=0.05)) +
#  geom_signif(comparisons = list(c("Random", "Statistical Learning")), test = "t.test", color="black") +
theme_classic()
barProduction + stat_summary(fun = mean, geom = "bar", position = "dodge", fill = "grey") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) +
labs(x = "Statistical Organization", y = "Production Score", title = "Production Score by Statistical Organization") +
scale_x_discrete(breaks=c("0","1"), labels=c("Random", "Statistical Learning")) +
stat_compare_means(aes(group=Statistical_Organization), method = "t.test", comparisons = list(c("Random", "Statistical Learning"))) +
#  geom_signif(comparisons = list(c("Random", "Statistical Learning")), test = "t.test", color="black") +
theme_classic()
?stat_compare_means
barProduction + stat_summary(fun = mean, geom = "bar", position = "dodge", fill = "grey") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) +
labs(x = "Statistical Organization", y = "Production Score", title = "Production Score by Statistical Organization") +
scale_x_discrete(breaks=c("0","1"), labels=c("Random", "Statistical Learning")) +
stat_compare_means() +
#  geom_signif(comparisons = list(c("Random", "Statistical Learning")), test = "t.test", color="black") +
theme_classic()
barProduction + stat_summary(fun = mean, geom = "bar", position = "dodge", fill = "grey") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) +
labs(x = "Statistical Organization", y = "Production Score", title = "Production Score by Statistical Organization") +
scale_x_discrete(breaks=c("0","1"), labels=c("Random", "Statistical Learning")) +
stat_compare_means(aes(label = ..p.signif..), method = "t.test", symnum.args) +
#  geom_signif(comparisons = list(c("Random", "Statistical Learning")), test = "t.test", color="black") +
theme_classic()
barProduction + stat_summary(fun = mean, geom = "bar", position = "dodge", fill = "grey") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) +
labs(x = "Statistical Organization", y = "Production Score", title = "Production Score by Statistical Organization") +
scale_x_discrete(breaks=c("0","1"), labels=c("Random", "Statistical Learning")) +
stat_compare_means(aes(label = ..p.signif..), method = "t.test") +
#  geom_signif(comparisons = list(c("Random", "Statistical Learning")), test = "t.test", color="black") +
theme_classic()
barProduction + stat_summary(fun = mean, geom = "bar", position = "dodge", fill = "grey") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) +
labs(x = "Statistical Organization", y = "Production Score", title = "Production Score by Statistical Organization") +
scale_x_discrete(breaks=c("0","1"), labels=c("Random", "Statistical Learning")) +
stat_compare_means(aes(label = ..p.signif.., label.y = 40), method = "t.test") +
#  geom_signif(comparisons = list(c("Random", "Statistical Learning")), test = "t.test", color="black") +
theme_classic()
barProduction + stat_summary(fun = mean, geom = "bar", position = "dodge", fill = "grey") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) +
labs(x = "Statistical Organization", y = "Production Score", title = "Production Score by Statistical Organization") +
scale_x_discrete(breaks=c("0","1"), labels=c("Random", "Statistical Learning")) +
stat_compare_means(aes(label = ..p.signif.., label.y = 5), method = "t.test") +
#  geom_signif(comparisons = list(c("Random", "Statistical Learning")), test = "t.test", color="black") +
theme_classic()
barProduction + stat_summary(fun = mean, geom = "bar", position = "dodge", fill = "grey") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) +
labs(x = "Statistical Organization", y = "Production Score", title = "Production Score by Statistical Organization") +
scale_x_discrete(breaks=c("0","1"), labels=c("Random", "Statistical Learning")) +
stat_compare_means(aes(label = ..p.signif..), label.y = 5, method = "t.test") +
#  geom_signif(comparisons = list(c("Random", "Statistical Learning")), test = "t.test", color="black") +
theme_classic()
# Actual code for bar graph with action conditions (x) and production scores (y):
my_comparisons <- list( c("0", "1"))
barProduction + stat_summary(fun = mean, geom = "bar", position = "dodge", fill = "grey") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) +
labs(x = "Statistical Organization", y = "Production Score", title = "Production Score by Statistical Organization") +
scale_x_discrete(breaks=c("0","1"), labels=c("Random", "Statistical Learning")) +
stat_compare_means(aes(comparisons = my_comparisons, label = ..p.signif..), label.y = 5, method = "t.test") +
#  geom_signif(comparisons = list(c("Random", "Statistical Learning")), test = "t.test", color="black") +
theme_classic()
barProduction + stat_summary(fun = mean, geom = "bar", position = "dodge", fill = "grey") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) +
labs(x = "Statistical Organization", y = "Production Score", title = "Production Score by Statistical Organization") +
scale_x_discrete(breaks=c("0","1"), labels=c("Random", "Statistical Learning")) +
stat_compare_means(comparisons = my_comparisons, aes(label = ..p.signif..), label.y = 5, method = "t.test") +
#  geom_signif(comparisons = list(c("Random", "Statistical Learning")), test = "t.test", color="black") +
theme_classic()
barProduction + stat_summary(fun = mean, geom = "bar", position = "dodge", fill = "grey") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) +
labs(x = "Statistical Organization", y = "Production Score", title = "Production Score by Statistical Organization") +
scale_x_discrete(breaks=c("0","1"), labels=c("Random", "Statistical Learning")) +
stat_compare_means(comparisons = my_comparisons, aes(label = ..p.signif..), label.y = 6, method = "t.test") +
#  geom_signif(comparisons = list(c("Random", "Statistical Learning")), test = "t.test", color="black") +
theme_classic()
stat_compare_means(comparisons = list( c("0", "1"), aes(label = ..p.signif..), label.y = 6, method = "t.test") +
barProduction + stat_summary(fun = mean, geom = "bar", position = "dodge", fill = "grey") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) +
labs(x = "Statistical Organization", y = "Production Score", title = "Production Score by Statistical Organization") +
scale_x_discrete(breaks=c("0","1"), labels=c("Random", "Statistical Learning")) +
stat_compare_means(comparisons = list(c("0", "1")), aes(label = ..p.signif..), label.y = 6, method = "t.test") +
theme_classic()
)
barProduction + stat_summary(fun = mean, geom = "bar", position = "dodge", fill = "grey") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) +
labs(x = "Statistical Organization", y = "Production Score", title = "Production Score by Statistical Organization") +
scale_x_discrete(breaks=c("0","1"), labels=c("Random", "Statistical Learning")) +
stat_compare_means(comparisons = list(c("0", "1")), aes(label = ..p.signif..), label.y = 6, method = "t.test") +
theme_classic()
barProduction + stat_summary(fun = mean, geom = "bar", position = "dodge", fill = "blue") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) +
labs(x = "Statistical Organization", y = "Production Score", title = "Production Score by Statistical Organization") +
scale_x_discrete(breaks=c("0","1"), labels=c("Random", "Statistical Learning")) +
stat_compare_means(comparisons = list(c("0", "1")), aes(label = ..p.signif..), label.y = 6, method = "t.test") +
theme_classic()
barProduction + stat_summary(fun = mean, geom = "bar", position = "dodge", fill = "white", line = "black") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) +
labs(x = "Statistical Organization", y = "Production Score", title = "Production Score by Statistical Organization") +
scale_x_discrete(breaks=c("0","1"), labels=c("Random", "Statistical Learning")) +
stat_compare_means(comparisons = list(c("0", "1")), aes(label = ..p.signif..), label.y = 6, method = "t.test") +
theme_classic()
barProduction + stat_summary(fun = mean, geom = "bar", position = "dodge", fill = "white", color = "black") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) +
labs(x = "Statistical Organization", y = "Production Score", title = "Production Score by Statistical Organization") +
scale_x_discrete(breaks=c("0","1"), labels=c("Random", "Statistical Learning")) +
stat_compare_means(comparisons = list(c("0", "1")), aes(label = ..p.signif..), label.y = 6, method = "t.test") +
theme_classic()
barProduction + stat_summary(fun = mean, geom = "bar", position = "dodge", fill = "darkolive3", color = "black") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) +
labs(x = "Statistical Organization", y = "Production Score", title = "Production Score by Statistical Organization") +
scale_x_discrete(breaks=c("0","1"), labels=c("Random", "Statistical Learning")) +
stat_compare_means(comparisons = list(c("0", "1")), aes(label = ..p.signif..), label.y = 6, method = "t.test") +
theme_classic()
barProduction + stat_summary(fun = mean, geom = "bar", position = "dodge", fill = "darkolivegreen", color = "black") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) +
labs(x = "Statistical Organization", y = "Production Score", title = "Production Score by Statistical Organization") +
scale_x_discrete(breaks=c("0","1"), labels=c("Random", "Statistical Learning")) +
stat_compare_means(comparisons = list(c("0", "1")), aes(label = ..p.signif..), label.y = 6, method = "t.test") +
theme_classic()
barProduction + stat_summary(fun = mean, geom = "bar", position = "dodge", fill = "darkolivegreen", color = "black") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) +
labs(x = "Statistical Organization", y = "Production Score", title = "Production Score by Statistical Organization") +
scale_x_discrete(breaks=c("0","1"), labels=c("Random", "Statistical Learning")) +
stat_compare_means(comparisons = list(c("0", "1")), aes(label = ..p.signif..), label.y = 5.5, method = "t.test") +
theme_classic()
barProduction + stat_summary(fun = mean, geom = "bar", position = "dodge", fill = "grey", color = "black") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) +
labs(x = "Statistical Organization", y = "Production Score", title = "Production Score by Statistical Organization") +
scale_x_discrete(breaks=c("0","1"), labels=c("Random", "Statistical Learning")) +
stat_compare_means(comparisons = list(c("0", "1")), aes(label = ..p.signif..), label.y = 5.5, method = "t.test") +
theme_classic()
barProduction + stat_summary(fun = mean, geom = "bar", position = "dodge", fill = "grey") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) +
labs(x = "Statistical Organization", y = "Production Score", title = "Production Score by Statistical Organization") +
scale_x_discrete(breaks=c("0","1"), labels=c("Random", "Statistical Learning")) +
stat_compare_means(comparisons = list(c("0", "1")), aes(label = ..p.signif..), label.y = 5.5, method = "t.test") +
theme_classic()
barComprehension + stat_summary(fun = mean, geom = "bar", position = "dodge", fill = "grey") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) +
labs(x = "Statistical Organization", y = "Comprehension Score", title = "Comprehension Score by Statistical Organization") +
scale_x_discrete(breaks=c("0","1"), labels=c("Random", "Statistical Learning")) +
stat_compare_means(comparisons = list(c("0", "1")), aes(label = ..p.signif..), label.y = 5.5, method = "t.test") +
theme_classic()
# Here's the same bar graph with action conditions (x) and comprehension scores (y):
barComprehension <- ggplot(df, aes(x = Statistical_Organization, y = Correct_Trigram_Scores))
barComprehension + stat_summary(fun = mean, geom = "bar", position = "dodge", fill = "grey") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) +
labs(x = "Statistical Organization", y = "Comprehension Score", title = "Comprehension Score by Statistical Organization") +
scale_x_discrete(breaks=c("0","1"), labels=c("Random", "Statistical Learning")) +
stat_compare_means(comparisons = list(c("0", "1")), aes(label = ..p.signif..), label.y = 5.5, method = "t.test") +
theme_classic()
barComprehension + stat_summary(fun = mean, geom = "bar", position = "dodge", fill = "steelblue3") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) +
labs(x = "Statistical Organization", y = "Comprehension Score", title = "Comprehension Score by Statistical Organization") +
scale_x_discrete(breaks=c("0","1"), labels=c("Random", "Statistical Learning")) +
stat_compare_means(comparisons = list(c("0", "1")), aes(label = ..p.signif..), label.y = 5.5, method = "t.test") +
theme_classic()
barComprehension + stat_summary(fun = mean, geom = "bar", position = "dodge", fill = "steelblue3") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) +
labs(x = "Statistical Organization", y = "Comprehension Score", title = "Comprehension Score by Statistical Organization") +
scale_x_discrete(breaks=c("0","1"), labels=c("Random", "Statistical Learning")) +
stat_compare_means(comparisons = list(c("0", "1")), aes(label = ..p.signif..), label.y = 5.5, method = "t.test") +
theme_classic()
barComprehension + stat_summary(fun = mean, geom = "bar", position = "dodge", fill = "steelblue3") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) +
labs(x = "Statistical Organization", y = "Comprehension Score", title = "Comprehension Score by
Statistical Organization") +
scale_x_discrete(breaks=c("0","1"), labels=c("Random", "Statistical Learning")) +
stat_compare_means(comparisons = list(c("0", "1")), aes(label = ..p.signif..), label.y = 5.5, method = "t.test") +
theme_classic()
barProduction + stat_summary(fun = mean, geom = "bar", position = "dodge", fill = "chartreuse4") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) +
labs(x = "Statistical Organization", y = "Production Score", title = "Production Score by Statistical Organization") +
scale_x_discrete(breaks=c("0","1"), labels=c("Random", "Statistical Learning")) +
stat_compare_means(comparisons = list(c("0", "1")), aes(label = ..p.signif..), label.y = 5.5, method = "t.test") +
theme_classic()
barProduction + stat_summary(fun = mean, geom = "bar", position = "dodge", fill = "chartreuse4") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) +
labs(x = "Statistical Organization", y = "Production Score", title = "Production Score by
Statistical Organization") +
scale_x_discrete(breaks=c("0","1"), labels=c("Random", "Statistical Learning")) +
stat_compare_means(comparisons = list(c("0", "1")), aes(label = ..p.signif..), label.y = 5.5, method = "t.test") +
theme_classic()
barProduction + stat_summary(fun = mean, geom = "bar", position = "dodge", fill = "chartreuse3") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) +
labs(x = "Statistical Organization", y = "Production Score", title = "Production Score by
Statistical Organization") +
scale_x_discrete(breaks=c("0","1"), labels=c("Random", "Statistical Learning")) +
stat_compare_means(comparisons = list(c("0", "1")), aes(label = ..p.signif..), label.y = 5.5, method = "t.test") +
theme_classic()
barProduction + stat_summary(fun = mean, geom = "bar", position = "dodge", fill = "chartreuse4") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) +
labs(x = "Statistical Organization", y = "Production Score", title = "Production Score by
Statistical Organization") +
scale_x_discrete(breaks=c("0","1"), labels=c("Random", "Statistical Learning")) +
stat_compare_means(comparisons = list(c("0", "1")), aes(label = ..p.signif..), label.y = 5.5, method = "t.test") +
theme_classic()
summary(model_production)
summary(model_comprehension)
barProduction + stat_summary(fun = mean, geom = "bar", position = "dodge", fill = "chartreuse4") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) +
labs(x = "Statistical Organization", y = "Production Score", title = "Production") +
scale_x_discrete(breaks=c("0","1"), labels=c("Random", "Statistical Learning")) +
stat_compare_means(comparisons = list(c("0", "1")), aes(label = ..p.signif..), label.y = 5.5, method = "t.test") +
theme_classic()
barComprehension + stat_summary(fun = mean, geom = "bar", position = "dodge", fill = "steelblue3") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) +
labs(x = "Statistical Organization", y = "Comprehension Score", title = "Comprehension") +
scale_x_discrete(breaks=c("0","1"), labels=c("Random", "Statistical Learning")) +
stat_compare_means(comparisons = list(c("0", "1")), aes(label = ..p.signif..), label.y = 5.5, method = "t.test") +
theme_classic()
barComprehension + stat_summary(fun = mean, geom = "bar", position = "dodge", fill = "steelblue3") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) +
labs(y = "Comprehension Score", title = "Comprehension") +
scale_x_discrete(breaks=c("0","1"), labels=c("Random", "Statistical Learning")) +
stat_compare_means(comparisons = list(c("0", "1")), aes(label = ..p.signif..), label.y = 5.5, method = "t.test") +
theme_classic()
barComprehension + stat_summary(fun = mean, geom = "bar", position = "dodge", fill = "steelblue3") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) +
labs(x = none, y = "Comprehension Score", title = "Comprehension") +
scale_x_discrete(breaks=c("0","1"), labels=c("Random", "Statistical Learning")) +
stat_compare_means(comparisons = list(c("0", "1")), aes(label = ..p.signif..), label.y = 5.5, method = "t.test") +
theme_classic()
barComprehension + stat_summary(fun = mean, geom = "bar", position = "dodge", fill = "steelblue3") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) +
labs(x = NULL, y = "Comprehension Score", title = "Comprehension") +
scale_x_discrete(breaks=c("0","1"), labels=c("Random", "Statistical Learning")) +
stat_compare_means(comparisons = list(c("0", "1")), aes(label = ..p.signif..), label.y = 5.5, method = "t.test") +
theme_classic()
barProduction + stat_summary(fun = mean, geom = "bar", position = "dodge", fill = "chartreuse4") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) +
labs(x = NULL, y = "Production Score", title = "Production") +
scale_x_discrete(breaks=c("0","1"), labels=c("Random", "Statistical Learning")) +
stat_compare_means(comparisons = list(c("0", "1")), aes(label = ..p.signif..), label.y = 5.5, method = "t.test") +
theme_classic()
# ANOVA test for the interaction between Statistical_Organization and action condition on performance.
model_production <- aov(df$Correct_Mvt_Scores ~ df$Statistical_Organization * df$Condition)
summary(model_production)
# ANOVA test for the interaction between Statistical_Organization and action condition on comprehension.
model_comprehension <- aov(df$Correct_Trigram_Scores ~ df$Statistical_Organization * df$Condition)
summary(model_comprehension)
### FOLLOW UP ANALYSES ####
# Does movement experience predict performance? Doesn't look like it (see Roam).
# Regression for production as predicted by experience:
model_experience_production <- lm(df2$Correct_Mvt_Scores ~ df2$Experience_Total)
summary(model_experience_production)
# Does movement experience predict comprehension? Doesn't look like it (see Roam).
# Regression for comprehension as predicted by experience:
model_experience_comprehension <- lm(df2$Correct_Trigram_Scores ~ df2$Experience_Total)
summary(model_experience_comprehension)
# ANOVA test for whether confidence predicts correctness on production.
# THIS IS A BETTER TEST BECAUSE CORRECTNESS IS DOING ALL THE PREDICTIVE WORK (AS EVIDENCED BY THE TEST BELOW)
model_productionL <- lm(df$Mvt_Likert ~ df$Correct_Mvt_Scores)
summary(model_productionL)
# ANOVA test for whether confidence predicts correctness on comprehension.
model_comprehensionL <- lm(df$Total_Likert ~ df$Correct_Trigram_Scores)
summary(model_comprehensionL)
# Here's the same bar graph with action conditions (x) and comprehension scores (y):
barComprehension <- ggplot(df, aes(x = Statistical_Organization, y = Correct_Trigram_Scores))
barComprehension + stat_summary(fun = mean, geom = "bar", position = "dodge", fill = "steelblue3") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) +
labs(x = "Statistical Organization", y = "Comprehension Score", title = "Comprehension") +
scale_x_discrete(breaks=c("0","1"), labels=c("Random", "Statistical Learning")) +
stat_compare_means(comparisons = list(c("0", "1")), aes(label = ..p.signif..), label.y = 5.5, method = "t.test") +
theme_classic()
barComprehension + stat_summary(fun = mean, geom = "bar", position = "dodge", fill = "steelblue3") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) +
labs(x = "Statistical Organization", y = "Comprehension Score", title = "Comprehension") +
scale_x_discrete(breaks=c("0","1"), labels=c("Random", "Statistical Learning")) +
stat_compare_means(comparisons = list(c("0", "1")), aes(label = ..p.signif..), label.y = 5.5, method = "t.test") +
theme_classic()
barProduction + stat_summary(fun = mean, geom = "bar", position = "dodge", fill = "chartreuse4") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width=0.90), width = 0.2) +
labs(x = "Statistican Organization", y = "Production Score", title = "Production") +
scale_x_discrete(breaks=c("0","1"), labels=c("Random", "Statistical Learning")) +
stat_compare_means(comparisons = list(c("0", "1")), aes(label = ..p.signif..), label.y = 5.5, method = "t.test") +
theme_classic()
#### GRAPHING ####
# Scatterplot for comprehension and confidence:
confidence_production <- ggplot(df, aes(`Mvt_Likert`, `Correct_Mvt_Scores`))
library(readr)   #reading CSV's
library(kableExtra)   #formatting table
library(pastecs) #describes data
library(dplyr)   #manipulating data to view it
library(ggplot2) #visualizing data with graphs (we don't talk about the first "ggplot")
library(emmeans) #post hoc analyses (contrasts!)
library(magrittr) #not sure if I need this one?
#### GRAPHING ####
# Scatterplot for comprehension and confidence:
confidence_production <- ggplot(df, aes(`Mvt_Likert`, `Correct_Mvt_Scores`))
confidence_production + stat_summary(geom = "point") + geom_smooth(method = lm)
confidence_production + stat_summary(geom = "point") + geom_smooth(method = lm) +
labs(x = "Likert Score (Total)", y = "Production Score") +
theme_classic()
confidence_production + stat_summary(geom = "point") + geom_smooth(method = lm) +
labs(x = "Likert Score (Total)", y = "Production Score") +
theme_classic()
# ANOVA test for whether confidence predicts correctness on production.
# THIS IS A BETTER TEST BECAUSE CORRECTNESS IS DOING ALL THE PREDICTIVE WORK (AS EVIDENCED BY THE TEST BELOW)
model_productionL <- lm(df$Mvt_Likert ~ df$Correct_Mvt_Scores)
summary(model_productionL)
