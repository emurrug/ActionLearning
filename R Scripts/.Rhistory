myfile <- "https://raw.githubusercontent.com/emurrug/ActionLearning/master/Data/Pilot%20Data%20All.csv"
df <- read_csv(myfile)
library (readr)   #reading CSV's
library (kableExtra)   #formatting table
library (pastecs) #describes data
library (dplyr)   #manipulating data to view it
library (ggplot2) #visualizing data with graphs (we don't talk about the first "ggplot")
myfile <- "https://raw.githubusercontent.com/emurrug/ActionLearning/master/Data/Pilot%20Data%20All.csv"
df <- read_csv(myfile)
df
#or to view the whole table at once
View(df)
df <- df[! (df$ResponseId == "Response ID")
]
df <- df[! (df$ResponseId == "Response ID")]
df <- df[-1,]
myfile <- "https://raw.githubusercontent.com/emurrug/ActionLearning/master/Data/Pilot%20Data%20All.csv"
df <- read_csv(myfile)
df <- df[-1,]
myfile <- "https://raw.githubusercontent.com/emurrug/ActionLearning/master/Data/Pilot%20Data%20All.csv"
df <- read_csv(myfile)
df <- df[-1,]
ggplot(df, aes(x = df$T-1_Recognition)) +  geom_histogram(binwidth = 1, color = "black", fill = "white")
ggplot(df, aes(x = T-1_Recognition)) +  geom_histogram(binwidth = 1, color = "black", fill = "white")
ggplot(df, aes(x = `T-1_Recognition`)) +  geom_histogram(binwidth = 1, color = "black", fill = "white")
is.factor(df$`T-1_Recognition`)
as.factor(df$`T-1_Recognition`)
ggplot(df, aes(x = `T-1_Recognition`)) +  geom_histogram(binwidth = 1, color = "black", fill = "white")
ggplot(df, aes(x = `T-1_Recognition`)) +  geom_bar(binwidth = 1, color = "black", fill = "white", stat = "count")
ggplot(df, aes(x = `T-1_Recognition`)) +  geom_bar(color = "black", fill = "white", stat = "count")
str(df)
ggplot(df, aes(x = `T-1_Likert_1`)) +  geom_bar(color = "black", fill = "white", stat = "count")
?geom_bar
myfile <- "https://raw.githubusercontent.com/emurrug/ActionLearning/master/Data/Pilot%20Data%20All.csv"
df <- read_csv(myfile, na.rm = TRUE)
df <- df[-1,]
?read_csv
ggplot(df, aes(x = df$variable, na.rm = TRUE)) + geom_bar(color = "black", fill = "white", stat = "count")
ggplot(df, aes(x = `T-1_Likert_1`, na.rm = TRUE)) + geom_bar(color = "black", fill = "white", stat = "count")
ggplot(df, aes(x = `T-1_Likert_1`)) +  geom_bar(color = "black", fill = "cyan", stat = "count")
ggplot(df, aes(x = `T-1_Likert_1`)) +  geom_bar(color = "yellow", fill = "cyan", stat = "count")
ggplot(df, aes(x = `T-1_Likert_1`)) +  geom_bar(color = "black", fill = "grey", stat = "count")
ggplot(df, aes(x = `T-1_Likert_1`)) +  geom_bar(color = "black", fill = "skyblue3", stat = "count")
ggplot(df, aes(x = `T-1_Likert_1`)) +  geom_bar(color = "black", fill = "skyblue1", stat = "count")
library (readr)   #reading CSV's
library (kableExtra)   #formatting table
library (pastecs) #describes data
library (dplyr)   #manipulating data to view it
library (ggplot2) #visualizing data with graphs (we don't talk about the first "ggplot")
df <- df %>% mutate_if(is.character,as.factor)
#EM: if you want to take the likert scales and make these numeric (so you can get an average, for example)
#you can select specific columns and make only these numeric
num.columns <- c('T-1_Likert_1', 'T-2_Likert_1', 'T-3_Likert_1', 'T-4_Likert_1')
df[num.columns] <- sapply(df[num.columns], as.numeric)
#always double check it looks good:
str(df)
df <- df %>%
mutate(MeanRecognition = mean(c(`T-1_Likert_1`, `T-2_Likert_1`, `T-3_Likert_1`,`T-4_Likert_1`)))
#Another way to visualize the exact same function is a simple "averaging equation":
df$MeanRecognition <- ((df$`T-1_Likert_1` + df$`T-2_Likert_1` + df$`T-3_Likert_1` + df$`T-4_Likert_1`)/4)
stat.desc(df$variable)
stat.desc(df`T-1_Likert_1`)
#You can also import the file directly from your computer. To do this, you just put your path
#directory instead of a URL.
df <- read_csv(myfile)
df <- df[-1,] #EM: removes the first row of the data (since this is a Qualtrics file w/ two headers)
#to view your first few lines you do
head(df)
#or to view the whole table at once
View(df)
df <- na.omit(df) #EM: removes rows with NAs in them.
#or to view the whole table at once
View(df)
str(df)
#to look at individual variables you can type in something like
is.factor(df$variable) #OR
is.factor(df$`T-1_Likert_1`)
is.numeric(df$`T-1_Likert_1`)
df <- df %>% mutate_if(is.character,as.factor)
is.numeric(df$`T-1_Likert_1`)
is.factor(df$`T-1_Likert_1`)
#EM: if you want to take the likert scales and make these numeric (so you can get an average, for example)
#you can select specific columns and make only these numeric
num.columns <- c('T-1_Likert_1', 'T-2_Likert_1', 'T-3_Likert_1', 'T-4_Likert_1')
df[num.columns] <- sapply(df[num.columns], as.numeric)
is.numeric(df$`T-1_Likert_1`)
#always double check it looks good:
str(df)
#EM: if you want to take the likert scales and make these numeric (so you can get an average, for example)
#you can select specific columns and make only these numeric
num.columns <- c('T-1_Likert_1', 'T-2_Likert_1', 'T-3_Likert_1', 'T-4_Likert_1',
'UT-1_Likert_1', 'UT-2_Likert_1', 'UT-3_Likert_1', 'UT-4_Likert_1')
str(df)
#EM: if you want to take the likert scales and make these numeric (so you can get an average, for example)
#you can select specific columns and make only these numeric
num.columns <- c('T-1_Likert_1', 'T-2_Likert_1', 'T-3_Likert_1', 'T-4_Likert_1', 'UT-1_Likert_1', 'UT-2_Likert_1', 'UT-3_Likert_1', 'UT-4_Likert_1')
str(df)
df <- df %>% mutate_if(is.character,as.factor)
#EM: if you want to take the likert scales and make these numeric (so you can get an average, for example)
#you can select specific columns and make only these numeric
num.columns <- c('T-1_Likert_1', 'T-2_Likert_1', 'T-3_Likert_1', 'T-4_Likert_1', 'UT-1_Likert_1', 'UT-2_Likert_1', 'UT-3_Likert_1', 'UT-4_Likert_1')
df[num.columns] <- sapply(df[num.columns], as.numeric)
#always double check it looks good:
str(df)
df <- df %>%
mutate(MeanRecognition = mean(c(`T-1_Likert_1`, `T-2_Likert_1`, `T-3_Likert_1`,`T-4_Likert_1`)))
df <- df %>%
mutate(MeanRecognition = mean(c(`UT-1_Likert_1`, `UT-2_Likert_1`, `UT-3_Likert_1`,`UT-4_Likert_1`)))
df <- df %>%
mutate(MeanRecognition = mean(c(`UT-1_Likert_1`, `UT-2_Likert_1`, `UT-3_Likert_1`,`UT-4_Likert_1`)))
df <- df %>%
mutate(MeanRecognition = mean(c(`T-1_Likert_1`, `T-2_Likert_1`, `T-3_Likert_1`,`T-4_Likert_1`)))
df <- df %>%
mutate(MeanRecognition = mean(c(`UT-1_Likert_1`, `UT-2_Likert_1`, `UT-3_Likert_1`,`UT-4_Likert_1`)))
df <- df %>%
mutate(MeanRecognition = mean(c(`T-1_Likert_1`, `T-2_Likert_1`, `T-3_Likert_1`,`T-4_Likert_1`)))
#Another way to visualize the exact same function is a simple "averaging equation":
df$MeanRecognition <- ((df$`T-1_Likert_1` + df$`T-2_Likert_1` + df$`T-3_Likert_1` + df$`T-4_Likert_1`)/4)
df <- df %>%
mutate(MeanRecognitionT = mean(c(`T-1_Likert_1`, `T-2_Likert_1`, `T-3_Likert_1`,`T-4_Likert_1`)))
df <- df %>%
mutate(MeanRecognitionUT = mean(c(`UT-1_Likert_1`, `UT-2_Likert_1`, `UT-3_Likert_1`,`UT-4_Likert_1`)))
#Another way to visualize the exact same function is a simple "averaging equation":
df$MeanRecognitionT <- ((df$`T-1_Likert_1` + df$`T-2_Likert_1` + df$`T-3_Likert_1` + df$`T-4_Likert_1`)/4)
df$MeanRecognitionUT <- ((df$`T-1_Likert_1` + df$`T-2_Likert_1` + df$`T-3_Likert_1` + df$`T-4_Likert_1`)/4)
df$MeanRecognitionUT <- ((df$`UT-1_Likert_1` + df$`UT-2_Likert_1` + df$`UT-3_Likert_1` + df$`UT-4_Likert_1`)/4)
stat.desc(df$`T-1_Likert_1`)
stat.desc(df$`T-2_Likert_1`)
stat.desc(df$`T-3_Likert_1`)
stat.desc(df$`T-4_Likert_1`)
stat.desc(df$`UT-1_Likert_1`)
stat.desc(df$`UT-2_Likert_1`)
stat.desc(df$`UT-3_Likert_1`)
stat.desc(df$`UT-4_Likert_1`)
ggplot(df, aes(x = df$`MeanRecognitionT`, na.rm = TRUE)) +
geom_bar(color = "black", fill = "white", stat = "count")
?ggplot
ggplot(df, aes(x = df$`MeanRecognitionT`, na.rm = TRUE)) +
geom_bar(color = "black", fill = "white", stat = "count", size = 7)
ggplot(df, aes(x = df$`MeanRecognitionT`, na.rm = TRUE)) +
geom_bar(color = "black", fill = "white", stat = "count", size = 3)
ggplot(df, aes(x = df$`MeanRecognitionT`, na.rm = TRUE)) +
geom_bar(color = "black", fill = "white", stat = "count", width = 1)
ggplot(df, aes(x = df$`MeanRecognitionT`, na.rm = TRUE)) +
geom_bar(color = "black", fill = "white", stat = "count", width = .5)
geom_bar(color = "black", fill = "white", stat = "count", size = 3)
geom_bar(color = "black", fill = "white", stat = "count", size = 7)
ggplot(df, aes(x = df$`MeanRecognitionUT`, na.rm = TRUE)) +
geom_bar(color = "black", fill = "white", stat = "count", width = .5)
library (readr)   #reading CSV's
library (kableExtra)   #formatting table
library (pastecs) #describes data
library (dplyr)   #manipulating data to view it
library (ggplot2) #visualizing data with graphs (we don't talk about the first "ggplot")
ggplot(df, aes(x = df$'MeanRecognitionT', na.rm = TRUE)) +
geom_bar(color = "black", fill = "white", stat = "count")
ggplot(df, aes(x = df$'MeanRecognitionT', na.rm = TRUE)) +
geom_histogram(color = "black", fill = "white", stat = "count")
ggplot(df, aes(x = df'MeanRecognitionT', na.rm = TRUE)) +
geom_histogram(color = "black", fill = "white", stat = "count", binwidth = 1)
ggplot(df, aes(x = df'MeanRecognitionT', na.rm = TRUE)) +
geom_bar(color = "black", fill = "white", stat = "count")
ggplot(df, aes(x = df$'MeanRecognitionT', na.rm = TRUE)) +
geom_bar(color = "black", fill = "white", stat = "count")
ggplot(df, aes(x = df$'MeanRecognitionUT', na.rm = TRUE)) +
geom_bar(color = "black", fill = "white", stat = "count")
